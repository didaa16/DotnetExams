// <auto-generated />
using System;
using Examen.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examen.Infrastructure.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20250521183519_FeteAhmedMezni")]
    partial class FeteAhmedMezni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Fete", b =>
                {
                    b.Property<int>("IdFete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFete"));

                    b.Property<DateTime>("DateFete")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<int>("NbInvitesMax")
                        .HasColumnType("int");

                    b.Property<int>("SalleIdSalle")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("IdFete");

                    b.HasIndex("SalleIdSalle");

                    b.ToTable("Fete");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Invitation", b =>
                {
                    b.Property<int>("FeteFK")
                        .HasColumnType("int");

                    b.Property<int>("InviteFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateInvitation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ConfirmerInvitation")
                        .HasColumnType("bit");

                    b.HasKey("FeteFK", "InviteFK", "DateInvitation");

                    b.HasIndex("InviteFK");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Invite", b =>
                {
                    b.Property<int>("IdInvite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvite"));

                    b.Property<string>("AdresseInvite")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("IdInvite");

                    b.ToTable("Invite");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Salle", b =>
                {
                    b.Property<int>("IdSalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalle"));

                    b.Property<string>("AdresseSalle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("NomSalle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("PrixParHeure")
                        .HasColumnType("float");

                    b.HasKey("IdSalle");

                    b.ToTable("Salle");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Fete", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Salle", "Salle")
                        .WithMany("Fetes")
                        .HasForeignKey("SalleIdSalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Invitation", b =>
                {
                    b.HasOne("Examen.ApplicationCore.Domain.Fete", "Fete")
                        .WithMany("Invitations")
                        .HasForeignKey("FeteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examen.ApplicationCore.Domain.Invite", "Invite")
                        .WithMany("Invitations")
                        .HasForeignKey("InviteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fete");

                    b.Navigation("Invite");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Fete", b =>
                {
                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Invite", b =>
                {
                    b.Navigation("Invitations");
                });

            modelBuilder.Entity("Examen.ApplicationCore.Domain.Salle", b =>
                {
                    b.Navigation("Fetes");
                });
#pragma warning restore 612, 618
        }
    }
}
